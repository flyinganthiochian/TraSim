@startuml "CATS Class Diagram"
 class Simulation {
    simDuration : Int
    currentStep : Int
    cellLength : Decimal
    updateSimStep ()

 }

 class Network {
    id : Int
    roadList : List<Road>
    nodeList : List<Node>
    lightList : List<Light>

    
 }

 class Road {
    id : Int
    numberOfLane : Int
    name : String
    startingNode : Node
    endingNode : Node
    length : Decimal
    vehicleList : List<vehicle>
    laneList : List<Lane>
    Incline : Decimal
    straightNextRoad : Road
    rightTurnRoadList : List<Road>
    lefTurnRoadList : List<Road>


 }

 class Lane {
    id : Int
    name : String
    cellList : List<Cell>
    road : Road

 }

 class Cell {
    id : Int
    name : String
    
    lane : Lane
    isOcupied : Bool
    isPassable : Bool
 }

 class Node {
    id : Int
    name : String
    inRoadsList : List<Road>
    outRoadsList : List<Road>
    isUTurnPossible : Bool

 }

 class Light {
    id : Int
    cell : Cell
    greenDurationStep : Int
    redDurationStep : Int
    amberDurationStep : Int
    currentColor : Int
    
    colorOrder : List<Int>
 }

 class Vehicle {
    id : Int
    engine : Engine
    driver : Driver
    length : Int
    passangerCapacity : Int
    maxCellSpeed : Int
    currentCellSpeed : Int
    currentRoad : Road
    currentCell : Cell
    isProbeVehicle : Bool

    accelerate()
    decelerate()
    moveRightLane()
    moveLeftLane()

 }

 class Engine {
    id : Int
    engineType : EngineType


 }

 class EngineType {
    id : Int
    name : String
    fuelType : FuelType
    emissionStandart : String
    fuelConsumptionUnit : String
    fuelConsumptionAmount : Decimal
    emissionCO : Decimal
    emissionTHC : Decimal
    emissionVOC : Decimal
    emissionNOx : Decimal
    emissionHCpNOx : Decimal
    emissionP : Decimal
    emissionPN : Decimal

 }

 class Driver {
    id : Int
    name : String
    driverType : DriverType
    vehicle : Vehicle
    origin : Node
    destination : Node
    lookAheadCellDistance : Int
    lookBackCellDistance : Int
    safeCellDistanceFront : Int
    safeCellDistanceBack : Int
    prefferedCellDistanceFront : Int
    prefferedCellDistanceBack : Int
    routeRoadList : List<Road>
    

 }

 class DriverType {
    id : Int
    name : String
    minPrefferedCellDistanceFront : Int
    maxPrefferedCellDistanceFront : Int
    minrefferedCellDistanceBack : Int
    maxPrefferedCellDistanceBack : Int
    maxPatience : Int
    minPatience : Int
    minPrefferedDeceleration : Int
    maxPrefferedDeceleration : Int
    

 }
@enduml